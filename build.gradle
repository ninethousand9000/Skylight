buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'com.skylight'
version = '1.0'
archivesBaseName = 'skylight'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            args '--username', 'SkylightDev'

            workingDirectory project.file('run')

            property 'fml.coreMods.load', 'com.skylight.base.mixins.MixinLoader'

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    maven { url = 'https://jitpack.io/' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'

    compile('org.spongepowered:mixin:0.7.4-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    annotationProcessor('org.spongepowered:mixin:0.8.2:processor') {
        exclude module: 'gson'
    }

    compile group: 'club.minnced', name: 'java-discord-rpc', version: 'v2.0.2'
    compile 'org.slick2d:slick2d-core:1.0.2'


}

/*task getDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}*/

jar.manifest.attributes(
        'MixinConfigs': 'mixins.skylight.json',
        'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
        'TweakOrder': 0,
        'FMLCorePluginContainsFMLMod': 'true',
        'FMLCorePlugin': 'club.skylight.base.mixins.MixinLoader',
        'ForceLoadAsMod': 'true',
//        'FMLAT': 'skylight_at.cfg'
)

mixin {
    defaultObfuscationEnv 'searge'
    add sourceSets.main, 'refmap.skylight.json'
}


shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('club.minnced:java-discord-rpc:v2.0.2'))
        include(dependency('org.slick2d:slick2d-core'))

    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

build.dependsOn(shadowJar)
